{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\ChikenDinnerPanel.js"],"names":["GameManager","require","AudioManager","gameEnum","countDown","FighterNode","th","bgAni","Alert","UIHelper","hasLoadedMyIcon","httpReq","curQuestion","time_matching","time_ready","time_checkSituation","time_checkResult","fighterNodes","PopupTipsNode","monster","myNode","WXTool","cc","Class","extends","Component","properties","lbl_title","default","type","Label","serializable","btn_right","Button","btn_wrong","reverseTime","resultPanel","Node","btn_resultConfirm","group_playersLeft","group_playersRight","group_playersInitPos","lbl_gameResult","answerResultBoard","lbl_currentScore","lbl_resultScore","btn_return","sign_me","coin","toggle_tool","Toggle","aniCountDown","Animation","choose","rightAni","wroghtAni","btn_invite","btn_begin","leftHole","rightHole","leftHoleState","rightHoleState","onLoad","start","init","getInstance","playMusic","MUSIC_TYPE","FIGHT","isRoomOwner","node","active","x","string","myInfo","score","label","on","onClickRight","onClickWrong","onClickConfirmResult","gameState","GAME_STATE","CHIKEN_MATCHING","onUseTool","errorHandler","appearWithText","isChecked","getResult","i","width","height","parent","node2","getComponent","Layout","updateLayout","initFighter","playersInfo","chickenGroup","length","instantiate","fighterNode","setParent","updateWithData","openId","roundStart","CHIKEN_ANSWERING","getQuestion","slowDown","getSituation","Chicken_GetQuestion","resp","content","startMove","startAnswer","showQustion","CHIKEN_GET_RESULT","nextRound","Chicken_GetSituation","fighterAnswers","roomTime","desc","GameConst","INTERVAL_CHICKEN_ANSWER_TIME","currentQuestionId","id","Math","min","updateAnswers","showGameResult","result","play","find","playEffect","EFFECT_TYPE","SUCCESS","FAIL","showTips","tips","scheduleOnce","btnBackClick","event","LoadScene","side","Chicken_SubmitAnswer","setPosition","v2","setFighterNodePos","director","loadScene","data","answerVo","isAlive","answer","key","stateArr","holeIdx","updateMatcher","random","renderNode","setSiblingIndex","iconUrl","SetImageFromUrl","Sprite","OnDoubleReward","onExitMatch","chickenMode","Chicken_EndMatch","Chicken_ExitRoom","Chicken_Use_UnDeadTool","toSide","motion","isMe","tostateArr","toholeArr","fromstateArr","toLocalPos","getPosition","toWorldPos","convertToWorldSpaceAR","toPos","convertToNodeSpaceAR","y","playDeadAni","fighters","deadSide","moveSideToFire","inlist","isFightNodeInList","fightNode","list","playEndAni","isCorrect","onInvite","shareToPlayTogether","wxName","roomId","onStartNow","Chicken_StartNow","rest","update","dt","INTERVAL_MATCHING","Chicken_GetRoomState","state","show","CHIKEN_READY","CHICKEN_GAME_START","schedule","CHICKEN_GAME_START_GO","INTERVAL_CHICKEN_SITUATION","INTERVAL_CHICKEN_GET_RESULT","Chicken_GetResult","NONE","isEnd","END"],"mappings":"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","file":"ChikenDinnerPanel.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var GameManager = require(\"GameManager\");\r\nvar AudioManager = require(\"AudioManager\");\r\nvar gameEnum = require('GameEnum');\r\nvar countDown = require(\"CountDown\");\r\nvar FighterNode = require(\"FighterNode\");\r\nvar th = null;\r\nvar bgAni = require('chickenbgAni');\r\nvar Alert = require(\"Alert\")\r\nvar UIHelper = require('UIHelper');\r\nvar hasLoadedMyIcon=false;\r\n\r\n\r\nvar httpReq = require('HttpReq');\r\nvar curQuestion;\r\nvar time_matching = 0;\r\nvar time_ready = 0;\r\nvar time_checkSituation = 0;\r\nvar time_checkResult = 0;\r\n// var playerListLeft;\r\n// var playerListRight;\r\nvar fighterNodes = [];\r\nvar PopupTipsNode = require(\"PopupTipsNode\");\r\nvar monster = require(\"Monster\");\r\nvar myNode;\r\nvar WXTool = require(\"WXTool\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lbl_title: {\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n        btn_right: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        btn_wrong: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        reverseTime: {\r\n            default: null,\r\n            type: countDown,\r\n            serializable: true,\r\n        },\r\n        resultPanel: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        btn_resultConfirm: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        group_playersLeft: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        group_playersRight: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        group_playersInitPos: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true\r\n        },\r\n        lbl_gameResult: {\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n        bgAni: {\r\n            default: null,\r\n            type: bgAni,\r\n            serializable: true,\r\n        },\r\n        answerResultBoard: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        lbl_currentScore: {\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n        lbl_resultScore: {\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n        btn_return: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        sign_me: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        coin: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        toggle_tool: {\r\n            default: null,\r\n            type: cc.Toggle,\r\n            serializable: true,\r\n        },\r\n        monster: {\r\n            default: null,\r\n            type: monster,\r\n            serializable: true,\r\n        },\r\n        aniCountDown: {\r\n            default: null,\r\n            type: cc.Animation,\r\n            serializable: true,\r\n        },\r\n        choose: {\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n        rightAni: {\r\n            default: null,\r\n            type: cc.Animation,\r\n            serializable: true,\r\n        },\r\n        wroghtAni: {\r\n            default: null,\r\n            type: cc.Animation,\r\n            serializable: true,\r\n        },\r\n        btn_invite: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        btn_begin: {\r\n            default: null,\r\n            type: cc.Button,\r\n            serializable: true,\r\n        },\r\n        leftHole: [cc.Node],\r\n        rightHole: [cc.Node],\r\n        leftHoleState: [],\r\n        rightHoleState: []\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        th = this;\r\n        curQuestion=null;\r\n        fighterNodes = [];\r\n    },\r\n\r\n    start() {\r\n        this.init();\r\n\r\n        AudioManager.getInstance().playMusic(AudioManager.MUSIC_TYPE.FIGHT);\r\n    },\r\n    init() {\r\n       \r\n        if(GameManager.getInstance().isRoomOwner)\r\n        {\r\n            th.btn_begin.node.active=true;\r\n            th.btn_invite.node.x=this.btn_right.node.x;\r\n        }\r\n        else\r\n        {\r\n            th.btn_begin.node.active=false;\r\n            th.btn_invite.node.x=0;\r\n        }\r\n        th.choose.active=false;\r\n        th.aniCountDown.node.active=false;\r\n        hasLoadedMyIcon=false;\r\n        th.toggle_tool.node.active = true;\r\n        th.coin.active = false;\r\n        th.sign_me.active = false;\r\n        th.btn_return.node.active = true;\r\n        th.lbl_currentScore.string = GameManager.getInstance().myInfo.score;\r\n        th.btn_right.node.active = false;\r\n        th.btn_wrong.node.active = false;\r\n        th.reverseTime.label.string = ''\r\n        th.resultPanel.active = false;\r\n        th.answerResultBoard.active = false;\r\n        th.btn_right.node.on('click', this.onClickRight, this);\r\n        th.btn_wrong.node.on('click', this.onClickWrong, this);\r\n        th.btn_resultConfirm.node.on('click', this.onClickConfirmResult, this);\r\n        //匹配计时\r\n        if (GameManager.getInstance().gameState == gameEnum.GAME_STATE.CHIKEN_MATCHING) {\r\n            th.reverseTime.node.active = true;\r\n            // th.reverseTime.startCountDown(20,function(){\r\n            // },'')\r\n        }\r\n        this.toggle_tool.node.on('toggle', this.onUseTool, this);\r\n\r\n        // playerListLeft=new Array();\r\n        // playerListRight=new Array();\r\n\r\n        // playerListLeft.push(this.itemOrigin_playerLeft);\r\n        // playerListRight.push(this.itemOrigin_playerRight);\r\n        // for(var i=0;i<9;i++)\r\n        // {\r\n        //     var leftItem= cc.instantiate(this.itemOrigin_playerLeft);\r\n        //     leftItem.parent=this.group_playersLeft;\r\n        //     playerListLeft.push(leftItem);\r\n\r\n        //     var rightItem= cc.instantiate(this.itemOrigin_playerRight);\r\n        //     rightItem.parent=this.group_playersRight;\r\n        //     playerListRight.push(rightItem);\r\n        // }\r\n        // this.clearAnswerList();\r\n        httpReq.errorHandler['2055' + '_' + '800'] = function () { PopupTipsNode.appearWithText('没有该房间') };\r\n        httpReq.errorHandler['2055' + '_' + '801'] = function () { PopupTipsNode.appearWithText('游戏已经开始') };\r\n        httpReq.errorHandler['2055' + '_' + '802'] = function () { PopupTipsNode.appearWithText('玩家所在房间游戏没开始') };\r\n        httpReq.errorHandler['2055' + '_' + '803'] = function () { PopupTipsNode.appearWithText('玩家不在游戏'); };\r\n        httpReq.errorHandler['2055' + '_' + '804'] = function () { PopupTipsNode.appearWithText('答题不是当前题目'); };\r\n        httpReq.errorHandler['2055' + '_' + '805'] = function () { PopupTipsNode.appearWithText('玩家所在房间游戏答题时间还没结束') };\r\n        httpReq.errorHandler['2062' + '_' + '806'] = function () {\r\n            PopupTipsNode.appearWithText('道具不足')\r\n            th.toggle_tool.isChecked = false;\r\n        };\r\n        httpReq.errorHandler['2059' + '_' + '803'] = th.getResult;\r\n        httpReq.errorHandler['2063' + '_' + '807'] = function () { PopupTipsNode.appearWithText('人数不足') };\r\n        this.leftHole = [];\r\n        this.leftHoleState = [];\r\n        this.rightHole = [];\r\n        this.rightHoleState = [];\r\n        for (var i = 0; i < 20; i++) {\r\n            var node = new cc.Node();\r\n            node.width = 60;\r\n            node.height = 60;\r\n            node.parent = this.group_playersLeft;\r\n\r\n            var node2 = new cc.Node();\r\n            node2.width = 60;\r\n            node2.height = 60;\r\n            node2.parent = this.group_playersRight;\r\n            this.leftHole[i] = node;\r\n            this.rightHole[i] = node2;\r\n            this.leftHoleState[i] = 0;\r\n            this.rightHoleState[i] = 0;\r\n        }\r\n        this.group_playersLeft.getComponent(cc.Layout).updateLayout();\r\n        this.group_playersRight.getComponent(cc.Layout).updateLayout();\r\n    },\r\n\r\n    initFighter() {\r\n        fighterNodes = [];\r\n\r\n        var playersInfo = GameManager.getInstance().chickenGroup;\r\n        th.sign_me.active = true;\r\n        for (var i = 0; i < playersInfo.length; i++) {\r\n            var node = cc.instantiate(GameManager.getInstance().fighterNode);\r\n            var fighterNode = node.getComponent(FighterNode);\r\n\r\n            node.setParent(this.group_playersInitPos);\r\n            fighterNode.updateWithData(playersInfo[i]);\r\n\r\n            fighterNodes[fighterNode.openId] = fighterNode;\r\n            if(playersInfo[i].openId == GameManager.getInstance().myInfo.openId)\r\n            {\r\n                myNode=fighterNode;\r\n            }\r\n            // if(playersInfo[i].)\r\n        }\r\n    },\r\n\r\n    roundStart() {\r\n\r\n        // this.clearAnswerList();\r\n        GameManager.getInstance().gameState = gameEnum.GAME_STATE.CHIKEN_ANSWERING;\r\n        th.resultPanel.active = false;\r\n        th.btn_right.node.active = true;\r\n        th.btn_wrong.node.active = true;\r\n        th.answerResultBoard.active = false;\r\n        th.getQuestion();\r\n        th.bgAni.slowDown();\r\n        th.getSituation();\r\n\r\n    },\r\n    getQuestion() {\r\n        GameManager.getInstance().Chicken_GetQuestion(function (resp) {\r\n            curQuestion = resp;\r\n            th.lbl_title.string = resp.content;\r\n            // th.reverseTime.startCountDown(gameEnum.GameConst.INTERVAL_CHICKEN_ANSWER_TIME,function(){\r\n            //     th.getResult();\r\n            // },'')\r\n            th.bgAni.startMove();\r\n\r\n            for (let openId in fighterNodes) {\r\n                var fighterNode = fighterNodes[openId];\r\n                fighterNode.startAnswer(curQuestion);\r\n            }\r\n        })\r\n    },\r\n    showQustion() {\r\n\r\n    },\r\n\r\n\r\n    getResult() {\r\n        GameManager.getInstance().gameState = gameEnum.GAME_STATE.CHIKEN_GET_RESULT;\r\n\r\n    },\r\n    nextRound() {\r\n        th.choose.active=true;\r\n       \r\n        this.roundStart();\r\n    },\r\n\r\n\r\n    getSituation() {\r\n        GameManager.getInstance().Chicken_GetSituation(function (resp) {\r\n            var fighterAnswers = resp['fighterAnswers'];\r\n            var roomTime = resp['roomTime'];\r\n            var desc = gameEnum.GameConst.INTERVAL_CHICKEN_ANSWER_TIME - roomTime;\r\n            var currentQuestionId = resp['currentQuestionId'];\r\n            desc = desc - 1;\r\n            if (curQuestion != null && currentQuestionId != curQuestion.id) {\r\n                th.getResult();\r\n                curQuestion = null;\r\n            }\r\n            else {\r\n                if (desc >= 0) {\r\n                    desc=Math.min(10,desc);\r\n                    th.reverseTime.label.string = desc;\r\n                    th.updateAnswers(fighterAnswers)\r\n                }\r\n            }\r\n\r\n\r\n\r\n        })\r\n    },\r\n\r\n    //本局结果\r\n    showGameResult(result, score) {\r\n        th.resultPanel.active = true;\r\n        th.resultPanel.getComponent(cc.Animation).play();\r\n\r\n        cc.find('lose', th.resultPanel).active = !result;\r\n        cc.find('win', th.resultPanel).active = result;\r\n        GameManager.getInstance().myInfo.score += score;\r\n        th.lbl_currentScore.string = GameManager.getInstance().myInfo.score;\r\n        th.lbl_resultScore.string = score;\r\n\r\n        if(result){\r\n            //胜利\r\n            AudioManager.getInstance().playEffect(AudioManager.EFFECT_TYPE.SUCCESS);\r\n        }else{\r\n            //失败\r\n            AudioManager.getInstance().playEffect(AudioManager.EFFECT_TYPE.FAIL);\r\n        }\r\n    },\r\n\r\n    showTips(content) {\r\n        this.tips.node.active = true;\r\n        cc.find(\"lbl\", this.tips.node).getComponent(cc.Label).string = content;\r\n        this.scheduleOnce(function () {\r\n            this.tips.node.active = false;\r\n        }, 1);\r\n    },\r\n    btnBackClick(event) {\r\n        GameManager.getInstance().LoadScene(\"main\")\r\n    },\r\n    onClickRight(event) {\r\n        if (curQuestion != null && myNode.side != 0) {\r\n            GameManager.getInstance().Chicken_SubmitAnswer(null, 0, curQuestion.id, function (resp) {\r\n                th.choose.setPosition(cc.v2(184.5,1334))\r\n                th.setFighterNodePos(0, myNode, true, true)\r\n                th.getSituation();\r\n            })\r\n        }\r\n    },\r\n    onClickWrong(event) {\r\n        if (curQuestion != null && myNode.side != 1) {\r\n            GameManager.getInstance().Chicken_SubmitAnswer(null, 1, curQuestion.id, function (resp) {\r\n                th.choose.setPosition(cc.v2(566,1334))\r\n                th.setFighterNodePos(1, myNode, true, true)\r\n                th.getSituation();\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    onClickConfirmResult(event) {\r\n        cc.director.loadScene('main', function (resp) {\r\n\r\n        })\r\n    },\r\n    // clearAnswerList()\r\n    // {\r\n    //     for(var i=0;i<playerListLeft.length;i++)\r\n    //     {\r\n    //         playerListLeft[i].getComponent(cc.Label).string='';\r\n    //         playerListRight[i].getComponent(cc.Label).string='';\r\n    //     }\r\n    // },\r\n    updateAnswers(data) {\r\n        // this.clearAnswerList();\r\n        // var idxLeft=0;\r\n        // var idxRight=0;\r\n        // for(var i=data.length-1;i>=0;i--)\r\n        // {\r\n\r\n        // var player=GameManager.getInstance().getChickenPlayer(data[i].openId)\r\n        // if(player != null)\r\n        // {\r\n        //     if(data[i].answer == 0)\r\n        //     {\r\n        //         if(idxLeft<playerListLeft.length)\r\n        //         {\r\n        //             playerListLeft[idxLeft].getComponent(cc.Label).string=player.nickName;\r\n        //         }\r\n\r\n        //         idxLeft++;\r\n        //     }\r\n        //     else if(data[i].answer == 1)\r\n        //     {\r\n        //         if(idxRight<playerListRight.length)\r\n        //         {\r\n        //             playerListRight[idxRight].getComponent(cc.Label).string=player.nickName;\r\n        //         }           \r\n        //         idxRight++;\r\n        //     }\r\n        // }\r\n        // }\r\n\r\n\r\n        for (var i = data.length - 1; i >= 0; i--) {\r\n            var answerVo = data[i];\r\n            var fighterNode = fighterNodes[answerVo.openId];\r\n\r\n            if (fighterNode != null) {\r\n                fighterNode.isAlive = true;\r\n                fighterNode.node.active = true;\r\n                if (answerVo.answer == 0) {\r\n                    if (fighterNode.side != 0) {\r\n                        this.setFighterNodePos(0, fighterNode, true, answerVo.openId == GameManager.getInstance().myInfo.openId)\r\n                    }\r\n\r\n                } else {\r\n                    if (fighterNode.side != 1) {\r\n                        this.setFighterNodePos(1, fighterNode, true, answerVo.openId == GameManager.getInstance().myInfo.openId)\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let key in fighterNodes) {\r\n            var fighterNode = fighterNodes[key];\r\n            if (!fighterNode.isAlive) {\r\n                var stateArr = fighterNode.side == 0 ? this.leftHoleState : this.rightHoleState;\r\n                if (fighterNode.holeIdx != -1) {\r\n                    stateArr[fighterNode.holeIdx] = 0;\r\n                    fighterNode.holeIdx = -1;\r\n                }\r\n                fighterNode.node.active = false;\r\n            }\r\n\r\n        }\r\n    },\r\n    updateMatcher(data) {\r\n        for (let key in fighterNodes) {\r\n            var fighterNode = fighterNodes[key];\r\n            // fighterNode.node.active = false;\r\n        }\r\n        myNode=null;\r\n        for (var i = data.length - 1; i >= 0; i--) {\r\n            var answerVo = data[i];\r\n            var fighterNode = fighterNodes[answerVo.openId];\r\n\r\n            if (fighterNode != null) {\r\n                fighterNode.node.active = true;\r\n            }\r\n            else {\r\n                var node = cc.instantiate(GameManager.getInstance().fighterNode);\r\n                var fighterNode = node.getComponent(FighterNode);\r\n               \r\n                node.setParent(this.group_playersInitPos);\r\n                fighterNode.updateWithData(data[i]);\r\n\r\n                fighterNodes[fighterNode.openId] = fighterNode;\r\n                if (Math.random() > .5) {\r\n                    this.setFighterNodePos(0, fighterNode, false, answerVo.openId == GameManager.getInstance().myInfo.openId)\r\n                } else {\r\n                    this.setFighterNodePos(1, fighterNode, false, answerVo.openId == GameManager.getInstance().myInfo.openId)\r\n                }\r\n               \r\n            }\r\n            if (answerVo.openId == GameManager.getInstance().myInfo.openId) {\r\n                myNode=fighterNode;\r\n              \r\n            }\r\n        }\r\n        if(myNode != null)\r\n        {\r\n            th.sign_me.active = true;\r\n            th.sign_me.setParent(myNode.renderNode);\r\n            th.sign_me.setPosition(0, 80)\r\n            myNode.node.setSiblingIndex(999)\r\n            if(!hasLoadedMyIcon)\r\n            {\r\n                if(GameManager.getInstance().myInfo.iconUrl != null)\r\n                {\r\n                    UIHelper.SetImageFromUrl(cc.find('mask/icon',th.sign_me).getComponent(cc.Sprite),GameManager.getInstance().myInfo.iconUrl, true);\r\n                    hasLoadedMyIcon=true;\r\n                }\r\n            }\r\n          \r\n           \r\n        }\r\n    },\r\n    OnDoubleReward(event) {\r\n        cc.director.loadScene('main', function (resp) {\r\n        })\r\n    },\r\n    onExitMatch(event) {\r\n        if (GameManager.getInstance().chickenMode == 3) {\r\n            GameManager.getInstance().Chicken_EndMatch(function (resp) {\r\n                cc.director.loadScene('main', function (resp) {\r\n\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            GameManager.getInstance().Chicken_ExitRoom(function (resp) {\r\n                cc.director.loadScene('main', function (resp) {\r\n\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    ,\r\n    onUseTool(event) {\r\n        GameManager.getInstance().Chicken_Use_UnDeadTool(th.toggle_tool.isChecked ? 1 : 0, function (resp) { })\r\n    },\r\n    setFighterNodePos(toSide, fighterNode, motion, isMe) {\r\n        var tostateArr = toSide == 0 ? this.leftHoleState : this.rightHoleState;\r\n        var toholeArr = toSide == 0 ? this.leftHole : this.rightHole;\r\n        var fromstateArr = toSide == 0 ? this.rightHoleState : this.leftHoleState;\r\n        for (var i = 0; i < tostateArr.length; i++) {\r\n            if (tostateArr[i] == 0) {\r\n                fighterNode.side = toSide;\r\n                if (fighterNode.holeIdx != -1) {\r\n                    fromstateArr[fighterNode.holeIdx] = 0;\r\n                }\r\n                tostateArr[i] = 1;\r\n                fighterNode.holeIdx = i;\r\n                var toLocalPos = toholeArr[i].getPosition();\r\n                var toWorldPos = toholeArr[i].parent.convertToWorldSpaceAR(toLocalPos);\r\n                var toPos = fighterNode.node.parent.convertToNodeSpaceAR(toWorldPos);\r\n                fighterNode.setPosition(toPos.x, toPos.y, motion, isMe)\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    playDeadAni(answer,fighters) {\r\n        var deadSide = answer == 1 ? 0 : 1;\r\n        this.monster.moveSideToFire(deadSide)\r\n\r\n        for (let key in fighterNodes) {\r\n            var fighterNode = fighterNodes[key];\r\n            var inlist=this.isFightNodeInList(fighterNode,fighters)\r\n            if(fighterNode.side == deadSide && inlist)\r\n            {\r\n                this.setFighterNodePos(deadSide == 0?1:0, fighterNode, true, false)\r\n            }\r\n        }\r\n\r\n        this.scheduleOnce(function () {\r\n            for (let key in fighterNodes) {\r\n                var fighterNode = fighterNodes[key];\r\n                if (fighterNode.side == deadSide) {\r\n                    var stateArr = fighterNode.side == 0 ? this.leftHoleState : this.rightHoleState;\r\n                    if (fighterNode.holeIdx != -1) {\r\n                        stateArr[fighterNode.holeIdx] = 0;\r\n                        fighterNode.holeIdx = -1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }, .7);\r\n    },\r\n    isFightNodeInList(fightNode,list)\r\n    {\r\n        for (var i=0;i<list.length;i++) {\r\n            if(fightNode.openId == list[i].openId)\r\n            {\r\n                return true;\r\n            }\r\n            \r\n        }\r\n        return false;\r\n    },\r\n    playEndAni(isCorrect,fighters)\r\n    {\r\n        var deadSide;\r\n        if(!isCorrect)\r\n        {\r\n            deadSide=myNode.side;\r\n        }\r\n        else\r\n        {\r\n            deadSide=myNode.side == 0?1:0;\r\n        }\r\n        this.monster.moveSideToFire(deadSide)\r\n        for (let key in fighterNodes) {\r\n            var fighterNode = fighterNodes[key];\r\n            var inlist=this.isFightNodeInList(fighterNode,fighters)\r\n            if(fighterNode.side == deadSide && inlist)\r\n            {\r\n                this.setFighterNodePos(deadSide == 0?1:0, fighterNode, true, false)\r\n            }\r\n        }\r\n        this.scheduleOnce(function () {\r\n            for (let key in fighterNodes) {\r\n                var fighterNode = fighterNodes[key];\r\n                if (fighterNode.side == deadSide) {\r\n                    var stateArr = fighterNode.side == 0 ? this.leftHoleState : this.rightHoleState;\r\n                    if (fighterNode.holeIdx != -1) {\r\n                        stateArr[fighterNode.holeIdx] = 0;\r\n                        fighterNode.holeIdx = -1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }, .7);\r\n    },\r\n    onInvite()\r\n    {\r\n        WXTool.getInstance().shareToPlayTogether(GameManager.getInstance().myInfo.wxName, GameManager.getInstance().roomId,function(){\r\n        });\r\n    },\r\n    onStartNow()\r\n    {\r\n        GameManager.getInstance().Chicken_StartNow(function(rest){\r\n\r\n        })\r\n        \r\n    },\r\n    update(dt) {\r\n        if (GameManager.getInstance().gameState == gameEnum.GAME_STATE.CHIKEN_MATCHING) {\r\n            time_matching += dt;\r\n            if (time_matching >= gameEnum.GameConst.INTERVAL_MATCHING) {\r\n                time_matching = 0;\r\n                GameManager.getInstance().Chicken_GetRoomState(function (resp) {\r\n                    var state = resp['roomStatus'];\r\n                    th.reverseTime.label.string = 60-resp['roomTime'];\r\n                    th.updateMatcher(resp['players']);\r\n                    if (state == -1) {\r\n                        Alert.show('等待超时', function () {\r\n                            cc.director.loadScene('main', function (resp) {\r\n\r\n                            })\r\n                        }, false)\r\n                    }\r\n                    if(state == 2)\r\n                    {\r\n                        th.reverseTime.label.string = 3\r\n                        th.lbl_title.string = '准备开始';\r\n                        time_ready=0;\r\n                        GameManager.getInstance().gameState =gameEnum.GAME_STATE.CHIKEN_READY;\r\n                        th.aniCountDown.node.active=true;\r\n                        th.toggle_tool.node.active = false;\r\n                        th.btn_invite.node.active=false;\r\n                        th.btn_begin.node.active=false;\r\n                       \r\n                        AudioManager.getInstance().playEffect(AudioManager.EFFECT_TYPE.CHICKEN_GAME_START);\r\n                        th.schedule(function(){AudioManager.getInstance().playEffect(AudioManager.EFFECT_TYPE.CHICKEN_GAME_START);},1,1);\r\n                        th.scheduleOnce(function()\r\n                        {\r\n                            AudioManager.getInstance().playEffect(AudioManager.EFFECT_TYPE.CHICKEN_GAME_START_GO);\r\n                        },3);\r\n                        th.reverseTime.label.string = '';\r\n                        th.aniCountDown.play();\r\n                    }\r\n\r\n                });\r\n            }\r\n        }\r\n        if (GameManager.getInstance().gameState == gameEnum.GAME_STATE.CHIKEN_READY) {\r\n            time_ready+=dt;\r\n            if (time_ready >= gameEnum.GameConst.INTERVAL_MATCHING) {\r\n                time_ready = 0;\r\n                GameManager.getInstance().Chicken_GetRoomState(function (resp) {\r\n                    // th.updateMatcher(resp['players']);\r\n                    var state = resp['roomStatus'];\r\n                    // th.reverseTime.label.string = 3-resp['roomTime'];\r\n                    if (state == 1) {\r\n                        \r\n                        // for (let key in fighterNodes) {\r\n                        //     var fighterNode = fighterNodes[key];\r\n                        //     fighterNode.node.active = false;\r\n                        // }\r\n                        GameManager.getInstance().chickenGroup = resp['players'];\r\n                        th.btn_return.node.active = false;\r\n                        th.coin.active = true;\r\n    \r\n                        // th.initFighter();\r\n                        th.nextRound();\r\n                    }\r\n    \r\n                });\r\n            }\r\n           \r\n        }\r\n        if (GameManager.getInstance().gameState == gameEnum.GAME_STATE.CHIKEN_ANSWERING) {\r\n            time_checkSituation += dt;\r\n            if (time_checkSituation >= gameEnum.GameConst.INTERVAL_CHICKEN_SITUATION) {\r\n                time_checkSituation = 0;\r\n                th.getSituation();\r\n            }\r\n        }\r\n        if (GameManager.getInstance().gameState == gameEnum.GAME_STATE.CHIKEN_GET_RESULT) {\r\n            time_checkResult += dt;\r\n            if (time_checkResult >= gameEnum.GameConst.INTERVAL_CHICKEN_GET_RESULT) {\r\n                time_checkResult = 0;\r\n                GameManager.getInstance().Chicken_GetResult(function (resp) {\r\n                    GameManager.getInstance().gameState = gameEnum.GAME_STATE.NONE;\r\n                    var isEnd = resp['end'];\r\n                    var isCorrect = resp['correct'];\r\n                    if(isCorrect)\r\n                    {\r\n                        th.rightAni.play();\r\n                    }\r\n                    else\r\n                    {\r\n                        th.wroghtAni.play();\r\n                    }\r\n                    var score = resp['score'];\r\n                    var fighters = resp['fighter']\r\n                    var answer=resp['answer']\r\n                    if (isEnd || !isCorrect) {\r\n                        GameManager.getInstance().gameState = gameEnum.GAME_STATE.END;\r\n                        th.scheduleOnce(function () {\r\n                        th.showGameResult(isCorrect, score)},3);\r\n                        th.playEndAni(isCorrect,fighters)\r\n                    }else{\r\n                        // th.answerResultBoard.active = true;\r\n                        for (let key in fighterNodes) {\r\n                            var fighterNode = fighterNodes[key];\r\n                            fighterNode.isAlive = false;\r\n                        }\r\n                        th.scheduleOnce(function () {\r\n                            th.answerResultBoard.active = false;\r\n                            th.nextRound();\r\n                        }, 3);\r\n                        th.playDeadAni(answer,fighters)\r\n                    }\r\n\r\n                   \r\n                })\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}