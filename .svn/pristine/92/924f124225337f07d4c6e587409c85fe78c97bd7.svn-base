{"version":3,"sources":["FighterNode.js"],"names":["UIHelper","require","GameManager","gameEnum","isMoving","colors","cc","color","Class","extends","Component","properties","renderNode","type","Node","default","avatarImg","Sprite","nameLb","Label","dragonBoneDisplay","dragonBones","ArmatureDisplay","openId","side","holeIdx","isAlive","isDead","onLoad","reset","img","find","_armatureDisPlay","getComponent","_armature","armature","slots","getSlots","slot","name","visible","_color","myColor","start","m_answerTimer","playAnimation","addEventListener","EventObject","COMPLETE","onAnimationComplete","update","dt","m_isRobot","getInstance","gameState","GAME_STATE","CHIKEN_ANSWERING","answer","Math","random","m_question","Chicken_SubmitAnswer","id","resetAnswerTime","updateWithData","data","robot","string","nickName","ran","round","length","startAnswer","question","floor","GameConst","INTERVAL_CHICKEN_ANSWER_TIME","setPosition","x","y","motion","isMe","node","v2","stopAllActions","delayTime","moveTo","sequence","callFunc","runAction","playDeadAnim","th","scheduleOnce","active","event","animationName","onCollisionEnter","other","self","_this"],"mappings":"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","file":"FighterNode.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar UIHelper = require(\"UIHelper\");\r\nvar GameManager = require(\"GameManager\");\r\nvar gameEnum = require(\"GameEnum\");\r\nvar isMoving=false;\r\nvar colors=[cc.color(255,127,127),cc.color(155,124,255),cc.color(124,187,255),cc.color(202,236,92),cc.color(236,150,92),cc.color(255,133,117),cc.color(92,113,128),cc.color(255,255,255)]\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        renderNode: {\r\n            type: cc.Node,\r\n            default: null\r\n        },\r\n\r\n        avatarImg: {\r\n            type: cc.Sprite,\r\n            default: null\r\n        },\r\n\r\n        nameLb: {\r\n            type: cc.Label, \r\n            default: null\r\n        },\r\n\r\n        dragonBoneDisplay: {\r\n            type: dragonBones.ArmatureDisplay,\r\n            default: null\r\n        },\r\n\r\n        openId: \"\",\r\n        side:0,\r\n        holeIdx:-1,\r\n        isAlive:false,\r\n        isDead:false,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n       \r\n    },\r\n\r\n    reset()\r\n    {\r\n        var img=cc.find('img',this.renderNode);\r\n        var _armatureDisPlay = img.getComponent(dragonBones.ArmatureDisplay)\r\n        //获取 Armatrue\r\n        var _armature = _armatureDisPlay.armature()\r\n        var slots=_armature.getSlots();\r\n        for(var slot of slots)\r\n        {\r\n            if(slot.name == 'eye_1' || slot.name == 'eye_2')\r\n            {\r\n                slot.visible=false;\r\n            }\r\n            else if(slot.name != \"body_1\")\r\n            {\r\n                slot._color=this.myColor;\r\n            }\r\n            else\r\n            {\r\n                slot._color=cc.color(255,255,255);\r\n            }\r\n           \r\n        }\r\n    },\r\n\r\n    start () {\r\n      \r\n        this.m_answerTimer = 0;\r\n        this.dragonBoneDisplay.playAnimation(\"normal\", 0);\r\n        this.dragonBoneDisplay.addEventListener(dragonBones.EventObject.COMPLETE, this.onAnimationComplete, this);\r\n    },\r\n\r\n    update (dt) {\r\n        // if(this.isDead)\r\n        // {\r\n        //     var oldWorldPos = this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n        //     if(oldWorldPos.y<200)\r\n        //     {\r\n        //         this.node.active=false;\r\n        //     }\r\n        //     return;\r\n        // }\r\n        if(!this.m_isRobot){\r\n            return;\r\n        }\r\n\r\n        if(!this.isAlive){\r\n            return;\r\n        }\r\n        \r\n        if(GameManager.getInstance().gameState != gameEnum.GAME_STATE.CHIKEN_ANSWERING){\r\n            return;\r\n        }\r\n\r\n        this.m_answerTimer -= dt;\r\n        if(this.m_answerTimer <= 0){\r\n            var answer = 0;\r\n            if(Math.random() > 0.5){\r\n                answer = 1;\r\n            }\r\n            if(this.m_question != null)\r\n            {\r\n                GameManager.getInstance().Chicken_SubmitAnswer(this.openId, answer, this.m_question.id, function(){\r\n\r\n                });\r\n                this.resetAnswerTime();\r\n            }\r\n          \r\n        }\r\n    },\r\n    \r\n    updateWithData(data){\r\n        this.m_isRobot = data.robot;\r\n\r\n        this.openId = data.openId;\r\n        this.nameLb.string = data.nickName;\r\n        var ran=Math.round(Math.random()*(colors.length-1))\r\n        this.myColor=colors[ran];\r\n        this.reset();\r\n        // UIHelper.SetImageFromUrl(this.avatarImg.getComponent(cc.Sprite), data.iconUrl, true);\r\n    },\r\n\r\n    startAnswer(question){\r\n        this.m_question = question;\r\n        this.resetAnswerTime();\r\n        \r\n    },\r\n\r\n    resetAnswerTime(){\r\n        if(Math.random() > 0.5){\r\n            this.m_answerTimer = Math.floor(Math.random() * gameEnum.GameConst.INTERVAL_CHICKEN_ANSWER_TIME);\r\n        }\r\n    },\r\n\r\n    setPosition(x,y,motion,isMe)\r\n    {\r\n        if(this.isDead)\r\n        {\r\n            return;\r\n        }\r\n        this.reset();\r\n        if(!motion)\r\n        {\r\n            this.node.setPosition(cc.v2(x,y));\r\n        }\r\n        else\r\n        {\r\n            this.node.stopAllActions();\r\n            var delayTime=(isMe || isMoving)?0:Math.round(Math.random()*5)*.1;\r\n            var moveTo = cc.sequence(cc.delayTime(delayTime),cc.callFunc(function(){isMoving=true}),cc.moveTo(0.3, cc.v2(x,y)),cc.callFunc(function(){isMoving=false}));\r\n            this.node.runAction(moveTo);\r\n        }\r\n    },\r\n\r\n    playDeadAnim(){\r\n        // this.dragonBoneDisplay.playAnimation(\"unnormal\", 1);\r\n        var img=cc.find('img',this.renderNode);\r\n        var _armatureDisPlay = img.getComponent(dragonBones.ArmatureDisplay)\r\n        //获取 Armatrue\r\n        var _armature = _armatureDisPlay.armature()\r\n        var slots=_armature.getSlots();\r\n        for(var slot of slots)\r\n        {\r\n            if(slot.name == 'eye_1' || slot.name == 'eye_2')\r\n            {\r\n                slot.visible=true;\r\n            }\r\n            else\r\n            {\r\n                slot._color=cc.color(0,0,0)\r\n    \r\n            }   \r\n        }\r\n        var th=this;\r\n        this.scheduleOnce(function(){\r\n            th.node.active = false;\r\n        },1)\r\n    },\r\n\r\n    onAnimationComplete(event){\r\n        if(this.dragonBoneDisplay.animationName != \"unnormal\"){\r\n            return;\r\n        }\r\n        this.node.active = false;\r\n        \r\n    },\r\n\r\n    onCollisionEnter(other, self){\r\n        if(other.node.name != \"FireBall\"){\r\n            return;\r\n        }\r\n        var _this=this;\r\n        this.playDeadAnim();\r\n        this.isDead=true;\r\n        // this.scheduleOnce(function(){ var parent=cc.find(\"Canvas/background/deadCanvas\")\r\n\r\n        // var oldWorldPos = _this.node.parent.convertToWorldSpaceAR(_this.node.position);\r\n        // _this.node.setParent(parent);\r\n\r\n        // var newPos = parent.convertToNodeSpaceAR(oldWorldPos);\r\n        // _this.node.position = newPos;},2)\r\n       \r\n    }\r\n});\r\n"]}