{"version":3,"sources":["Robot.js"],"names":["GameManager","require","GrabChessTime","RobotState","Wait","GrabChess","AnswerQuest","instance","Robot","cc","Class","statics","getInstance","ctor","director","getScheduler","enableForTarget","onAction","dt","_this","m_state","GrabChessByRobot","resp","console","log","data","questions","curQuestionIdx","answer","Math","floor","random","length","SendAnswerByRobot","grabChess","scheduler","isScheduled","unschedule","rand","schedule","answerQuest","module","exports"],"mappings":";;;;;;AAAA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;AACA,IAAIC,gBAAgB,CAAC,CAAD,EAAG,CAAH,CAApB;AACA,IAAIC,aAAa;AACbC,UAAM,CADO;AAEbC,eAAW,CAFE;AAGbC,iBAAa;AAHA,CAAjB;AAKA,IAAIC,WAAW,IAAf;AACA,IAAIC,QAAQC,GAAGC,KAAH,CAAS;AACjBC,aAAS;AACLC,mBADK,yBACQ;AACT,mBAAOL,aAAaA,WAAW,IAAIC,KAAJ,EAAxB,GAAsCD,QAA7C;AACH;AAHI,KADQ;;AAOjBM,UAAM,gBAAU;AACZJ,WAAGK,QAAH,CAAYC,YAAZ,GAA2BC,eAA3B,CAA2C,IAA3C;AACH,KATgB;;AAWjBC,YAXiB,oBAWRC,EAXQ,EAWL;AACR,YAAIC,QAAQ,IAAZ;;AAEA,YAAG,KAAKC,OAAL,IAAgBjB,WAAWE,SAA9B,EAAwC;AACpCL,wBAAYY,WAAZ,GAA0BS,gBAA1B,CAA2C,UAASC,IAAT,EAAc;AACrDC,wBAAQC,GAAR,CAAYF,IAAZ;AACAH,sBAAMC,OAAN,GAAgBjB,WAAWC,IAA3B;AACH,aAHD;AAIH,SALD,MAKM,IAAG,KAAKgB,OAAL,IAAgBjB,WAAWG,WAA9B,EAA0C;AAC5C,gBAAImB,OAAKzB,YAAYY,WAAZ,GAA0Bc,SAA1B,CAAoC1B,YAAYY,WAAZ,GAA0Be,cAA9D,CAAT;;AAEA,gBAAGF,IAAH,EAAQ;AACJ,oBAAIG,SAASC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBN,KAAK,SAAL,EAAgBO,MAA3C,CAAb;AACAhC,4BAAYY,WAAZ,GAA0BqB,iBAA1B,CAA4CL,MAA5C,EAAoD,UAASN,IAAT,EAAc;AAC9DC,4BAAQC,GAAR,CAAYF,IAAZ;AACAH,0BAAMC,OAAN,GAAgBjB,WAAWC,IAA3B;AACH,iBAHD;AAIH;AACJ;AACJ,KA9BgB;AAgCjB8B,aAhCiB,uBAgCN;AACP,YAAIC,YAAY1B,GAAGK,QAAH,CAAYC,YAAZ,EAAhB;;AAEA,YAAGoB,UAAUC,WAAV,CAAsB,KAAKnB,QAA3B,EAAqC,IAArC,CAAH,EAA8C;AAC1CkB,sBAAUE,UAAV,CAAqB,KAAKpB,QAA1B,EAAoC,IAApC;AACH;;AAED,aAAKG,OAAL,GAAejB,WAAWE,SAA1B;;AAEA,YAAIiC,OAAOT,KAAKE,MAAL,MAAiB7B,cAAc,CAAd,IAAmBA,cAAc,CAAd,CAApC,IAAwDA,cAAc,CAAd,CAAnE;AACAiC,kBAAUI,QAAV,CAAmB,KAAKtB,QAAxB,EAAkC,IAAlC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8CqB,IAA9C,EAAoD,KAApD;AACH,KA3CgB;AA6CjBE,eA7CiB,yBA6CJ;AACT,YAAIL,YAAY1B,GAAGK,QAAH,CAAYC,YAAZ,EAAhB;;AAEA,YAAGoB,UAAUC,WAAV,CAAsB,KAAKnB,QAA3B,EAAqC,IAArC,CAAH,EAA8C;AAC1CkB,sBAAUE,UAAV,CAAqB,KAAKpB,QAA1B,EAAoC,IAApC;AACH;;AAED,aAAKG,OAAL,GAAejB,WAAWG,WAA1B;AACA6B,kBAAUI,QAAV,CAAmB,KAAKtB,QAAxB,EAAkC,IAAlC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,KAAjD;AACH;AAtDgB,CAAT,CAAZ;;AAyDAwB,OAAOC,OAAP,GAAiBlC,KAAjB","file":"Robot.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\controller","sourcesContent":["var GameManager = require(\"GameManager\");\r\nvar GrabChessTime = [3,5];\r\nvar RobotState = {\r\n    Wait: 1,\r\n    GrabChess: 2,\r\n    AnswerQuest: 3\r\n};\r\nvar instance = null;\r\nvar Robot = cc.Class({\r\n    statics: {\r\n        getInstance(){\r\n            return instance || (instance = new Robot()), instance;\r\n        }\r\n    },\r\n\r\n    ctor: function(){\r\n        cc.director.getScheduler().enableForTarget(this);\r\n    },\r\n\r\n    onAction(dt){\r\n        var _this = this;\r\n\r\n        if(this.m_state == RobotState.GrabChess){\r\n            GameManager.getInstance().GrabChessByRobot(function(resp){\r\n                console.log(resp);\r\n                _this.m_state = RobotState.Wait;\r\n            });\r\n        }else if(this.m_state == RobotState.AnswerQuest){\r\n            var data=GameManager.getInstance().questions[GameManager.getInstance().curQuestionIdx];\r\n\r\n            if(data){\r\n                var answer = Math.floor(Math.random() * data['options'].length);\r\n                GameManager.getInstance().SendAnswerByRobot(answer, function(resp){\r\n                    console.log(resp);\r\n                    _this.m_state = RobotState.Wait;\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    grabChess(){\r\n        var scheduler = cc.director.getScheduler();\r\n\r\n        if(scheduler.isScheduled(this.onAction, this)){\r\n            scheduler.unschedule(this.onAction, this);\r\n        }\r\n\r\n        this.m_state = RobotState.GrabChess;\r\n\r\n        var rand = Math.random() * (GrabChessTime[1] - GrabChessTime[0]) + GrabChessTime[0];\r\n        scheduler.schedule(this.onAction, this, 0, 0, rand, false);\r\n    },\r\n\r\n    answerQuest(){\r\n        var scheduler = cc.director.getScheduler();\r\n\r\n        if(scheduler.isScheduled(this.onAction, this)){\r\n            scheduler.unschedule(this.onAction, this);\r\n        }\r\n\r\n        this.m_state = RobotState.AnswerQuest;\r\n        scheduler.schedule(this.onAction, this, 0, 0, 3, false);\r\n    }\r\n})\r\n\r\nmodule.exports = Robot;"]}