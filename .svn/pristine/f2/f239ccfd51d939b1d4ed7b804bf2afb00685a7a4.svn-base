(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/scripts/PopupLiveNode.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, 'c643daG+K1AJqV066eftAV9', 'PopupLiveNode', __filename);
// scripts/PopupLiveNode.js

"use strict";

var PopupWindow = require("PopupWindow");
var PopupTipsNode = require("PopupTipsNode");
var GameManager = require("GameManager");
var WXTool = require("WXTool");

cc.Class({
    extends: PopupWindow,

    statics: {
        show: function show() {
            var node = cc.find("Canvas/PopupLiveNode");
            if (node == null) {
                node = cc.instantiate(GameManager.getInstance().popupLiveNode);
                node.setParent(cc.Canvas.instance.node);
                node.position = cc.Vec2.ZERO;
            }

            node.active = true;
        }
    },

    properties: {
        watchVideoBtn: {
            type: cc.Button,
            default: null
        }
    },

    onLoad: function onLoad() {
        this.m_animation = this.getComponent(cc.Animation);
    },
    start: function start() {},
    onEnable: function onEnable() {
        this.node.pauseSystemEvents(true);
        this.m_animation.play("popup_livenode_show");
        this.watchVideoBtn.interactable = WXTool.getInstance().advertiseVideoReady;
    },
    onWatchVideoBtnClick: function onWatchVideoBtnClick(btn) {
        WXTool.getInstance().showAdvertiseVideo(function () {
            _this.onCloseBtnClick();
        }, function () {
            PopupTipsNode.ShowWithText("视频播放失败");
        });
    },
    onCloseBtnClick: function onCloseBtnClick(btn) {
        this.node.pauseSystemEvents(true);
        this.m_animation.play("popup_livenode_hide");
    },
    onFadeInFinish: function onFadeInFinish() {
        this.node.resumeSystemEvents(true);
    },
    onFadeOutFinish: function onFadeOutFinish() {
        this.node.resumeSystemEvents(true);
        this.node.active = false;
    }
});

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=PopupLiveNode.js.map
        